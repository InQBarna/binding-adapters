apply plugin: 'com.android.library'

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibility
        targetCompatibility rootProject.ext.targetCompatibility
    }
}

dependencies {
    implementation libraries.support.v4
    implementation libraries.support.recyclerView

    androidTestImplementation(testLibraries.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation testLibraries.junit
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "davidgarcia"
            name "David GarcÃ­a"
            email "david.garcia@inqbarna.com"
        }
    }

    scm {
        url "http://gitlab.inqbarna.com/contrib/android-loaders"
    }
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.source
}

def printObj = { o ->
    def filtered = ['class', 'active']

    println o.properties
            .sort { it.key }
            .collect { it }
            .findAll { !filtered.contains(it.key) }
            .join('\n')
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

if (project.hasProperty('bintrayUser')) {

    apply plugin: "com.jfrog.bintray"
    apply plugin: 'maven-publish'

    publishing {
        publications {
            CommonLibraryPublication(MavenPublication) {
                groupId = 'com.inqbarna.util'
                artifactId = 'common'
                version = '1.0.0'
                artifact androidSourcesJar
                artifact javadocJar
                artifact bundleReleaseAar

                pom {
                    packaging "aar"
                    withXml {
                        def root = asNode()
                        root.children().last() + pomConfig
                        def dependenciesNode = root.appendNode('dependencies')
                        configurations.implementation.allDependencies.each {
                            if (it.name != 'unspecified') {
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', it.group)
                                dependencyNode.appendNode('artifactId', it.name)
                                dependencyNode.appendNode('version', it.version)
                            }
                        }
                    }
                }
            }
        }
    }

    bintray {
        user = project.property('bintrayUser')
        key = project.property('bintrayKey')
        publications = ["CommonLibraryPublication"]
        dryRun = true
        pkg {
            repo = 'utilities'
            name = 'common'
            userOrg = 'inqbarna-oss'
            licenses = ['Apache-2.0']
            vcsUrl = 'http://gitlab.inqbarna.com/contrib/android-loaders.git'
            version {
                name = "1.0.0"
            }
        }
    }

}