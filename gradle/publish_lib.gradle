// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name POM_LICENSE_NAME
            url POM_LICENSE_URL
            distribution POM_LICENSE_DISTRIBUTION
        }
    }
    developers {
        developer {
            id "davidgarcia"
            name "David Garc√≠a"
            email "david.garcia@inqbarna.com"
        }
    }

    scm {
        url POM_PROJECT_URL
    }
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.source
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

if (project.hasProperty('bintrayUser')) {

    apply plugin: "com.jfrog.bintray"
    apply plugin: 'maven-publish'

    def pubName = "${libraryArtifactId}LibraryPublication"


    publishing {
        publications {
            "$pubName"(MavenPublication) {
                groupId = LIBRARY_GROUP_ID
                artifactId = libraryArtifactId
                version = libraryVersion
                artifact androidSourcesJar
                artifact javadocJar
                artifact bundleReleaseAar

                pom {
                    packaging "aar"
                    withXml {
                        def root = asNode()
                        root.children().last() + pomConfig
                        def dependenciesNode = root.appendNode('dependencies')
                        configurations.implementation.allDependencies.each {
                            if (it.name != 'unspecified') {
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', it.group)
                                dependencyNode.appendNode('artifactId', it.name)
                                dependencyNode.appendNode('version', it.version)
                            }
                        }
                    }
                }
            }
        }
    }

    bintray {
        user = project.property('bintrayUser')
        key = project.property('bintrayKey')
        publications = [pubName]
        dryRun = true
        pkg {
            repo = BINTRAY_REPO
            name = libraryArtifactId
            userOrg = BINTRAY_ORGANIZATION
            licenses = [POM_LICENSE]
            vcsUrl = POM_REPO_URL
            version {
                name = libraryVersion
            }
        }
    }

}